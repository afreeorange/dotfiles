#!/usr/bin/env bash

set -euo pipefail

# shellcheck source=/dev/null
source "$HOME/.config/bash/colors"

# ----------

MAJOR_PYTHON_VERSION=$(python -c "import sys; print(sys.version_info.major)")
MINOR_PYTHON_VERSION=$(python -c "import sys; print(sys.version_info.minor)")
PYTHON_VERSION="${MAJOR_PYTHON_VERSION}.${MINOR_PYTHON_VERSION}"

# ----------

OUTPUT_FILE="$HOME/.platform-dependencies/python-$PYTHON_VERSION"
OUTPUT_FILE_BROAD="$HOME/.platform-dependencies/python"

# ----------

# # Check if pyenv is managing things
# if [[ -z "$PYENV_ROOT" ]]; then
#     echo "${RED}Pyenv is not managing Python. Stopping.${STOP}"
#     exit
# fi

# Check for pip
command -v pip &>/dev/null || {
  echo "${RED}Could not find pip. Stopping.${STOP}"
  exit
}

# Make an empty output file
# `truncate` not found on fucking macOS
echo "" >"$OUTPUT_FILE"

# Finally write dependencies
echo "Writing ${CYAN}${OUTPUT_FILE}${STOP}"
echo "Writing ${CYAN}${OUTPUT_FILE_BROAD}${STOP}"

DEPENDENCIES="$(pip freeze)"
echo "$DEPENDENCIES" >"$OUTPUT_FILE"
cp "$OUTPUT_FILE" "$OUTPUT_FILE_BROAD"
echo "Done"
