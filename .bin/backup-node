#!/usr/bin/env bash

# shellcheck source=/dev/null
source "$HOME/.config/bash/colors"

# ----------

MAJOR_NODE_VERSION=$(node -e "console.log(process.versions.node.split('.')[0]);")
MINOR_NODE_VERSION=$(node -e "console.log(process.versions.node.split('.')[1]);")
NODE_VERSION="${MAJOR_NODE_VERSION}.${MINOR_NODE_VERSION}"

# ----------

OUTPUT_FILE="$HOME/.platform-dependencies/node-$NODE_VERSION"
OUTPUT_FILE_BROAD="$HOME/.platform-dependencies/node"

# ----------

# # Check if NVM is managing node versions
# if [[ -z "$NVM_BIN" ]]; then
#     echo "${RED}NVM is not managing Node. Stopping.${STOP}"
#     exit
# fi

echo "Writing ${YELLOW}${OUTPUT_FILE}${STOP}"
echo "Writing ${YELLOW}${OUTPUT_FILE_BROAD}${STOP}"

# `truncate` not found on fucking macOS
echo "" >"$OUTPUT_FILE"

PACKAGE_PATHS="$(npm list -g --depth 0 --parseable 2>/dev/null | grep node_modules)"
IFS=$'\n' && for PACKAGE_PATH in $PACKAGE_PATHS; do
  PACKAGE="$(basename "$PACKAGE_PATH")"

  # Weirdness with this 🤷‍♂️ Not capturing package versions.
  # VERSION="$(grep \"version\" "$PACKAGE_PATH"/package.json | cut -d\" -f4)"
  # echo "${PACKAGE}@${VERSION}" >> "$OUTPUT_FILE"

  echo "${PACKAGE}" >>"$OUTPUT_FILE"
done

cp "$OUTPUT_FILE" "$OUTPUT_FILE_BROAD"
echo "Done"
