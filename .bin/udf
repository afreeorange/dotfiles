#!/usr/bin/env bash

# Update Dot Files
# Pull and push changes to my dotfiles

IFS=$'\n'

cd "$HOME" || return

# shellcheck source=/dev/null
source "$HOME/.config/bash/conf.d/00-exports.sh"
# shellcheck source=/dev/null
source "$HOME/.config/bash/conf.d/10-options.sh"
# shellcheck source=/dev/null
source "$HOME/.config/bash/conf.d/11-functions.sh"
# shellcheck source=/dev/null
source "$HOME/.config/bash/conf.d/17-random-excuses.sh"
# shellcheck source=/dev/null
source "$HOME/.config/bash/conf.d/20-colors.sh"

# ----------

echo "${GREEN}Backing up dependencies${STOP}"
echo "${GREEN}$(draw_line '‚ïê')${STOP}"

if [[ "$(uname -s)" == "Darwin" ]]; then
  echo "${YELLOW}HomeBrew${STOP}"
  echo "${YELLOW}$(draw_line '‚îÄ')${STOP}"
  "$HOME/.bin/backup-homebrew"
fi

# echo "${YELLOW}+  Node${STOP}"
# "$HOME/.bin/backup-node"
# 
# echo "${YELLOW}+  Python${STOP}"
# "$HOME/.bin/backup-python"

# ----------

# Forcing since I can use nvm or pyenv to switch interpreters and
# don't want to forget to commit the packages associated with the
# new interpreter.
yadm add -f "$HOME/.platform-dependencies/*"

# ----------

echo "${GREEN}Attempting pull from Github${STOP}"
echo "${GREEN}$(draw_line '‚ïê')${STOP}"
yadm pull origin master --quiet --strategy-option=theirs
CHANGED_FILES=()
while IFS='' read -r line; do CHANGED_FILES+=("$line"); done < <(yadm diff --name-status HEAD~1 HEAD)

if [[ "${#CHANGED_FILES[@]}" -eq 0 ]]; then
  echo "${GRAY}>  Nothing has changed since the last commit${STOP}"
elif [[ "${#CHANGED_FILES[@]}" -eq 1 ]]; then
  echo "${GRAY}>  Just one file changed since the last commit${STOP}"
else
  echo "${GRAY}>  ${#CHANGED_FILES[@]} files have changed since last commit"
fi

# ----------------------------------------------------------------------------------------------------
echo "\n"
# ----------------------------------------------------------------------------------------------------

for FILE in "${CHANGED_FILES[@]}"; do
  echo "${GRAY}${FILE}${STOP}"
done

echo "${GREEN}Collecting any new changed or deleted files${STOP}"
echo "${GREEN}$(draw_line '‚ïê')${STOP}"

FILES=()
while IFS='' read -r line; do FILES+=("$line"); done < <(yadm status -uno --porcelain | cut -c4- | sed s/\"//g)

if [[ "${#FILES[@]}" -eq 0 ]]; then
  echo "${GRAY}ü§∑‚Äç‚ôÄÔ∏è Looks like there's nothing new to push${STOP}"
  exit 1
elif [[ "${#FILES[@]}" -eq 1 ]]; then
  echo "${YELLOW}> Just one file has changed${STOP}"
else
  echo "${YELLOW}> ${#FILES[@]} files have changed"
fi

for FILE in "${FILES[@]}"; do
  echo "${YELLOW}+ Adding $HOME/$FILE${STOP}"
  yadm add "$HOME/$FILE"
done

# ----------------------------------------------------------------------------------------------------
echo "\n"
# ----------------------------------------------------------------------------------------------------

echo "${GREEN}Committing${STOP}"
echo "${GREEN}$(draw_line '‚ïê')${STOP}"
yadm commit --quiet --message "$(random_excuse)"

# ----------------------------------------------------------------------------------------------------
echo "\n"
# ----------------------------------------------------------------------------------------------------

echo "${GREEN}Attempting push to Github${STOP}"
echo "${GREEN}$(draw_line '‚ïê')${STOP}"
yadm push origin master --quiet
